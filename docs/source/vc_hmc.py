import argparseparser = argparse.ArgumentParser()parser.add_argument("a", help="alphabet size", type=int)parser.add_argument("l", help="sequence length", type=int)parser.add_argument("-name", help="name of output folder")parser.add_argument("-data", help="path to input data",                    type=str, required=True)parser.add_argument("-lambdas", help="path to lambdas",                    type=str, required=True)parser.add_argument("-MAP", help="path to MAP estimate", dest="MAP")parser.add_argument("-step_size", help="initial leapfrog stepsize",                    dest="step_size", type=float, default=1e-6)parser.add_argument("-n_steps", help="number of leapfrog steps per iteration",                    dest="n_steps", type=int, required=True)parser.add_argument("-n_samples", help="number of samples to draw from the posterior",                    dest="n_samples", type=int, required=True)parser.add_argument("-n_tunes", help="number of HMC steps used for tuning the step_size parameter",                    dest="n_tunes", type=int, default=100)parser.add_argument("-starting_position",  help="starting position",                    choices=['mode', 'random', 'custom'], dest="qstart", default='mode')parser.add_argument("-starting_position_path",                    help="path to starting position vector if using custom starting position", dest="qpath")parser.add_argument("-intermediate_output", help="output intemediate samples and variance",                    default=False)parser.add_argument("-sample_name", help="name of the hmc sample")