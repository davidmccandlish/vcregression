wd="/Users/keitokiddo/Dropbox/VC/"#
wd#
setwd(paste(wd,"GB1/GB1_glmnet",sep=""))
wd()
pwd()
read.table(file=paste('tr_',i,"_",j,".tsv",sep=''), header = FALSE))
i=1#
j=1#
read.table(file=paste('../data/tr_',i,"_",j,".tsv",sep=''), header = FALSE))
read.table(file=paste('../data/tr_',i,"_",j,".tsv",sep=''), header = FALSE)
getwd()
setwd(../)
setwd("../")
get(wd)
getwd()
i=1#
j=1#
tr=as.integer(unlist(read.table(file=paste('../data/tr_',i,"_",j,".tsv",sep=''), header = FALSE)))
getwd()
wd="/Users/keitokiddo/Dropbox/VC/"#
wd#
setwd(paste(wd,"GB1/GB1_glmnet",sep=""))
getwd()
tr=as.integer(unlist(read.table(file=paste('../data/tr_',i,"_",j,".tsv",sep=''), header = FALSE)))
tr
# install.packages("glmnet", repos = "http://cran.us.r-project.org")#
# install.packages("Matrix", repos = "http://cran.us.r-project.org")#
library(tidyverse)#
library(broom)#
library(glmnet)#
library(Matrix)#
library(glmnetUtils)#
library(data.table)#
bestpara <- function(output){#
	number.of.alphas.tested <- length(output$alpha)#
	cv.glmnet.dt <- data.table()#
	for (i in 1:number.of.alphas.tested){#
	  glmnet.model <- output$modlist[[i]]#
	  min.mse <-  min(glmnet.model$cvm)#
	  min.lambda <- glmnet.model$lambda.min#
	  alpha.value <- output$alpha[i]#
	  new.cv.glmnet.dt <- data.table(alpha=alpha.value,min_mse=min.mse,min_lambda=min.lambda)#
	  cv.glmnet.dt <- rbind(cv.glmnet.dt,new.cv.glmnet.dt)#
  return(cv.glmnet.dt[which.min(cv.glmnet.dt$min_mse)])#
}}#
wd="/Users/keitokiddo/Dropbox/VC/"#
wd#
setwd(paste(wd,"GB1/GB1_glmnet",sep=""))#
##########
#
response=read.table(file = 'response.tsv', sep = '\t', header = FALSE)[[1]]#
seqlist=as.integer(unlist(read.table(file='seqlist.tsv',sep = '\t', header = FALSE)))#
rules=read.table(file = 'rules4.tsv', sep = '\t', header = FALSE)#
design <- sparseMatrix(rules[[1]],rules[[2]])#
dim(design)#
#
mks=c(1, 80, 2400, 32000, 160000)#
nrep=3
k=2#
modelname="elasticnet_pairwise"#
start_time <- Sys.time()#
#
for (i in 1:18){#
	for (j in 1:3){#
#
		tr=as.integer(unlist(read.table(file=paste('../data/tr_',i,"_",j,".tsv",sep=''), header = FALSE)))#
		cva_out <- cva.glmnet(design[tr,1: sum(mks[1:(k+1)])], response[tr])#
		pd <- predict(cva_out, design[,1: sum(mks[1:(k+1)])], alpha=bestpara(cva_out)$alpha)#
		write.table(pd, file=paste("out/pd_",modelname,"_", i, "_", j, ".tsv", sep=""), quote=FALSE, sep='\t', col.names = NA)#
	}#
}#
end_time <- Sys.time()#
#
end_time - start_time
response=read.table(file = '../data/response.txt', sep = '\t', header = FALSE)[[1]]#
seqlist=as.integer(unlist(read.table(file='../data/seqlist.txt',sep = '\t', header = FALSE)))
wd="/Users/keitokiddo/Dropbox/VC/"#
wd#
setwd(paste(wd,"GB1/GB1_glmnet",sep=""))
response=read.table(file = '../data/response.txt', sep = '\t', header = FALSE)[[1]]
response=read.table(file = '../data/response.tsv', sep = '\t', header = FALSE)[[1]]#
seqlist=as.integer(unlist(read.table(file='../data/seqlist.tsv',sep = '\t', header = FALSE)))
rules=read.table(file = 'rules4.tsv', sep = '\t', header = FALSE)
response=read.table(file = '../data/response.txt', sep = '\t', header = FALSE)[[1]]#
seqlist=as.integer(unlist(read.table(file='../data/seqlist.txt',sep = '\t', header = FALSE)))
rules=read.table(file = 'rules4.tsv', sep = '\t', header = FALSE)#
design <- sparseMatrix(rules[[1]],rules[[2]])#
dim(design)
wd="/Users/keitokiddo/Dropbox/VC/Smn1"
setwd(paste(wd,"/glmnet",sep=""))
response=read.table(file = 'response.tsv', sep = '\t', header = FALSE)[[1]]
mks=c(1, 32, 448, 3584, 17920, 57344, 114688, 131072, 65536)
nrep=10
rules=read.table(file = 'rules.tsv', sep = '\t', header = FALSE)#
design <- sparseMatrix(rules[[1]],rules[[2]])#
dim(design)
modelname="3way_EN"#
k=3
tr=as.integer(unlist(read.table(file=paste('..data/tr_',i,"_",j,".tsv",sep=''), header = FALSE)))
tr=as.integer(unlist(read.table(file=paste('../data/tr_',i,"_",j,".tsv",sep=''), header = FALSE)))
i=1#
j=1
tr=as.integer(unlist(read.table(file=paste('../data/tr_',i,"_",j,".tsv",sep=''), header = FALSE)))
cva_out <- cva.glmnet(design[tr,1: sum(mks[1:(k+1)])], response[tr])
bestpara(cva_out)
bestpara(cva_out)[1]
bestpara(cva_out)[1]$alpha
alph = bestpara(cva_out)[1]$alpha
alph
best.params = bestpara(cva_out)
best.params$alpha
pd <- predict(cva_out, design[,1: sum(mks[1:(k+1)])], alpha=best.params$alpha)
pd
## Pairwise#
modelname = "2way_EN"#
k = 2#
#
start_time <- Sys.time()#
#
for (i in 1:11){#
	for (j in 1:5){#
#
		tr = as.integer(unlist(read.table(file = paste('..data/tr_',i,"_",j,".tsv",sep = ''), header = FALSE)))#
		cva_out <- cva.glmnet(design[tr,1: sum(mks[1:(k+1)])], response[tr])#
		best.params = bestpara(cva_out)#
		pd <- predict(cva_out, design[,1: sum(mks[1:(k+1)])], alpha = best.params$alpha)#
		write.table(as.matrix(pd), file = paste("pd_",modelname,"_", i, "_", j, ".tsv", sep = ""), quote = FALSE, sep = '\t', col.names = NA)#
	}#
}#
#
end_time <- Sys.time()#
#
end_time - start_time
tr = as.integer(unlist(read.table(file = paste('..data/tr_',i,"_",j,".tsv",sep = ''), header = FALSE)))
wd = "/Users/keitokiddo/Dropbox/VC/Smn1"
setwd(paste(wd,"/glmnet",sep = ""))
tr = as.integer(unlist(read.table(file = paste('..data/tr_',i,"_",j,".tsv",sep = ''), header = FALSE)))
tr = as.integer(unlist(read.table(file = paste('../data/tr_',i,"_",j,".tsv",sep = ''), header = FALSE)))
modelname = "2way_EN"#
k = 2#
#
start_time <- Sys.time()#
#
for (i in 1:11){#
	for (j in 1:5){#
#
		tr = as.integer(unlist(read.table(file = paste('../data/tr_',i,"_",j,".tsv",sep = ''), header = FALSE)))#
		cva_out <- cva.glmnet(design[tr,1: sum(mks[1:(k+1)])], response[tr])#
		best.params = bestpara(cva_out)#
		pd <- predict(cva_out, design[,1: sum(mks[1:(k+1)])], alpha = best.params$alpha)#
		write.table(as.matrix(pd), file = paste("pd_",modelname,"_", i, "_", j, ".tsv", sep = ""), quote = FALSE, sep = '\t', col.names = NA)#
	}#
}#
#
end_time <- Sys.time()#
#
end_time - start_time
library(tidyverse)#
library(broom)#
library(glmnet)#
library(Matrix)#
#
bestpara <- function(output){#
	number.of.alphas.tested <- length(output$alpha)#
	cv.glmnet.dt <- data.table()#
	for (i in 1:number.of.alphas.tested){#
	  glmnet.model <- output$modlist[[i]]#
	  min.mse <-  min(glmnet.model$cvm)#
	  min.lambda <- glmnet.model$lambda.min#
	  alpha.value <- output$alpha[i]#
	  new.cv.glmnet.dt <- data.table(alpha = alpha.value,min_mse = min.mse,min_lambda = min.lambda)#
	  cv.glmnet.dt <- rbind(cv.glmnet.dt,new.cv.glmnet.dt)#
  return(cv.glmnet.dt[which.min(cv.glmnet.dt$min_mse)])#
}}#
wd = "/Users/keitokiddo/Dropbox/VC/Smn1"#
#
setwd(paste(wd,"/glmnet",sep = ""))#
##########
response = read.table(file = 'response.tsv', sep = '\t', header = FALSE)[[1]]#
#
mks = c(1, 32, 448, 3584, 17920, 57344, 114688, 131072, 65536)#
nrep = 5#
rules = read.table(file = 'rules.tsv', sep = '\t', header = FALSE)#
design <- sparseMatrix(rules[[1]],rules[[2]])#
dim(design)#
## Three-way#
modelname = "3way_EN"#
k = 3#
#
start_time <- Sys.time()#
#
for (i in 1:11){#
	for (j in 1:5){#
#
		tr = as.integer(unlist(read.table(file = paste('../data/tr_',i,"_",j,".tsv",sep = ''), header = FALSE)))#
		cva_out <- cva.glmnet(design[tr,1: sum(mks[1:(k+1)])], response[tr])#
		best.params = bestpara(cva_out)#
		pd <- predict(cva_out, design[,1: sum(mks[1:(k+1)])], alpha = best.params$alpha)#
		write.table(as.matrix(pd), file = paste("pd_",modelname,"_", i, "_", j, ".tsv", sep = ""), quote = FALSE, sep = '\t', col.names = NA)#
	}#
}#
#
end_time <- Sys.time()#
#
end_time - start_time
library(tidyverse)#
library(broom)#
library(glmnet)#
library(Matrix)#
library(glmnetUtils)#
library(data.table)
modelname = "3way_EN"#
k = 3#
#
start_time <- Sys.time()#
#
for (i in 1:11){#
	for (j in 1:5){#
#
		tr = as.integer(unlist(read.table(file = paste('../data/tr_',i,"_",j,".tsv",sep = ''), header = FALSE)))#
		cva_out <- cva.glmnet(design[tr,1: sum(mks[1:(k+1)])], response[tr])#
		best.params = bestpara(cva_out)#
		pd <- predict(cva_out, design[,1: sum(mks[1:(k+1)])], alpha = best.params$alpha)#
		write.table(as.matrix(pd), file = paste("pd_",modelname,"_", i, "_", j, ".tsv", sep = ""), quote = FALSE, sep = '\t', col.names = NA)#
	}#
}#
#
end_time <- Sys.time()#
#
end_time - start_time
## Pairwise#
modelname = "2way_EN"#
k = 2#
#
start_time <- Sys.time()#
#
for (i in 1:11){#
	for (j in 1:5){#
#
		tr = as.integer(unlist(read.table(file = paste('../data/tr_',i,"_",j,".tsv",sep = ''), header = FALSE)))#
		cva_out <- cva.glmnet(design[tr,1: sum(mks[1:(k+1)])], response[tr])#
		best.params = bestpara(cva_out)#
		pd <- predict(cva_out, design[,1: sum(mks[1:(k+1)])], alpha = best.params$alpha)#
		write.table(as.matrix(pd), file = paste("pd_",modelname,"_", i, "_", j, ".tsv", sep = ""), quote = FALSE, sep = '\t', col.names = NA)#
	}#
}#
#
end_time <- Sys.time()#
#
end_time - start_time
library(tidyverse)#
library(broom)#
library(glmnet)#
library(Matrix)#
library(glmnetUtils)#
library(data.table)
bestpara <- function(output){#
	number.of.alphas.tested <- length(output$alpha)#
	cv.glmnet.dt <- data.table()#
	for (i in 1:number.of.alphas.tested){#
	  glmnet.model <- output$modlist[[i]]#
	  min.mse <-  min(glmnet.model$cvm)#
	  min.lambda <- glmnet.model$lambda.min#
	  alpha.value <- output$alpha[i]#
	  new.cv.glmnet.dt <- data.table(alpha = alpha.value,min_mse = min.mse,min_lambda = min.lambda)#
	  cv.glmnet.dt <- rbind(cv.glmnet.dt,new.cv.glmnet.dt)#
  return(cv.glmnet.dt[which.min(cv.glmnet.dt$min_mse)])#
}}#
wd = "/Users/keitokiddo/Dropbox/VC/Smn1"
setwd(paste(wd,"/glmnet",sep = ""))#
##########
response = read.table(file = 'response.tsv', sep = '\t', header = FALSE)[[1]]
mks = c(1, 32, 448, 3584, 17920, 57344, 114688, 131072, 65536)#
nrep = 5
rules = read.table(file = 'rules.tsv', sep = '\t', header = FALSE)#
design <- sparseMatrix(rules[[1]],rules[[2]])#
dim(design)#
## Three-way#
modelname = "3way_EN"#
k = 3
tr = as.integer(unlist(read.table(file = paste('../data/seqlistSmn1',".tsv",sep = ''), header = FALSE)))
print(tr)
cva_out <- cva.glmnet(design[tr,1: sum(mks[1:(k+1)])], response[tr])
best.params = bestpara(cva_out)
pd <- predict(cva_out, design[,1: sum(mks[1:(k+1)])], alpha = best.params$alpha)
write.table(as.matrix(pd), file = paste("pd_",modelname,"_", "ALL", ".tsv", sep = ""), quote = FALSE, sep = '\t', col.names = NA)
